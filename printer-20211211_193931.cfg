# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: -11
position_min: -11
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: -4
position_min: -4
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 400

[safe_z_home]
home_xy_position: 169,194 # Take into account the probe offset ((probe rhs of nozzle) 45,0 = 105,150)
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]
sensor_pin: ^PD2
control_pin: PB5
x_offset: -19 #STOCK -45
y_offset: -44 #STOCK 0
z_offset: 1.025 #SET USING PROBE_CALIBRATE COMMAND
speed: 5
lift_speed: 40
samples: 2
sample_retract_dist: 2
samples_result: average
samples_tolerance: 0.025
samples_tolerance_retries: 5

[bed_mesh]
speed: 300
mesh_min: 25, 10
mesh_max: 281, 256
algorithm: bicubic
probe_count: 5,5
horizontal_move_z: 6

[extruder]
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 8.209 #31.924 #7.824
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB4
sensor_type: ATC Semitec 104GT-2 # Stock is: EPCOS 100K B57560G104F
sensor_pin: PK5
min_temp: 0
max_temp: 280
pressure_advance: 0.0405

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
#control: pid
#pid_Kp: 426.68
#pid_Ki: 78.92
#pid_Kd: 576.71
min_temp: 0
max_temp: 120

[fan]
pin: PH6

[virtual_sdcard]
path: ~/gcode_files

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 300   # reliable max feedrate of 320. This means that a maximum reliable XY feedrate is 160 mm per second.
max_accel: 1500
max_z_velocity: 5
max_z_accel: 100

# Start / end code macros
[include start-end.cfg]

[display]
lcd_type: st7920
cs_pin: PH1
sclk_pin: PA1
sid_pin: PH0
encoder_pins: ^PC4, ^PC6
click_pin: ^!PC2

#---------------------------------
# ADDED FOR THE INPUT SHAPER / ADXL345
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,30  # an example


######################################################################
# Beeper
######################################################################

[output_pin beeper]
pin: PC0
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

#---------------------------------

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[gcode_macro M300]
gcode:  
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds 
    {% endif %}
      SET_PIN PIN=beeper VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
      SET_PIN PIN=beeper VALUE=0

######################################################################
# Controls
######################################################################

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  #TURN_OFF_HEATERS
  G91 ;Relative positioning
  G1 E-2 F2700 ;Retract a bit
  G1 E-2 Z0.2 F2400 ;Retract and raise Z
  G1 X5 Y5 F3000 ;Wipe out
  G1 Z10 ;Raise Z more
  G90 ;Absolute positioning

  G1 X300 Y300 ;Present print
  M106 S0 ;Turn-off fan
  #M104 S0 ;Turn-off hotend
  #M140 S0 ;Turn-off bed
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.278
#*# pid_ki = 1.537
#*# pid_kd = 139.439
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.707
#*# pid_ki = 0.825
#*# pid_kd = 1388.842
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.022500, -0.051250, -0.021250, 0.071250, 0.063750
#*# 	-0.045000, -0.051250, 0.007500, 0.070000, 0.042500
#*# 	-0.027500, -0.036250, 0.010000, 0.058750, 0.032500
#*# 	-0.020000, -0.020000, 0.040000, 0.083750, 0.046250
#*# 	0.062500, 0.028750, 0.046250, 0.071250, 0.016250
#*# tension = 0.2
#*# min_x = 25.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 256.0
#*# mesh_x_pps = 2
#*# max_x = 281.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 64.0
#*# shaper_type_y = ei
#*# shaper_freq_y = 29.4
